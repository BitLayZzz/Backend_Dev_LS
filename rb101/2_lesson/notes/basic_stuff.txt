These are some definitions and examples in the Small Programs lesson in RB101

Short circuiting - a concept for the && operator that allows all further expressions after the first false expression to be ignored, thus expediting the processing of a && statement.
  
  Short circuiting example: 
  false && "true" < 5
  => false  

  In this example an ArgumentError will not be raised because the first expression is already false.

----------
TRUTHINESS

Truthiness - Thanks to Ruby being a very liberal language, any object that doesn't evaluate to false or nil can be considered truthy, this doesn't however guarantee the object will equal true.

  Truthiness example:
  num = 5
  puts num ? true : false
  => true

  num == true
  => false
  
  In this example 5 is "truthy" but not necessarily true.

------------------------
PSEUDO-CODE n FLOWCHARTS
Pseudo-Code - away of formulating the logic of a program that we are preparing to write, that is language independent. In other words, one does not have to focus on the language syntax when writing "code" this way first.

  KEY WORDS for Pseudo-Code
  START - start of the program
  SET - sets a variable we can use for later
  GET - retrieve input from user
  PRINT - displays output to user
  READ - retrieve value from variable
  IF/ELSE IF/ ELSE - show conditional branches in logic
  WHILE - show looping logic
  END - end of program 


Pseudo-Code is the equivalent to the A in the PEDAC process

Flowcharts - using flowcharts to map out the procedural steps of an algorithm will help you understand the logic behind a specific process
  - This logic deducing tool is best used when extracting subprocesses from larger programs or algorithms that may be leaving you confused or troubled.
  - From a higher level, utilizing declarative (more abstracted) code instead of imperative(more detailed) code segments our program into logical sections, allowing us to focus on one section at a time.

Always try to figure out how detailed the words should be and what can be extracted to sub-processes when using both of these tools to help dissect the logic of a problem
